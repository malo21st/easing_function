{"name":{"0":"Linear","1":"inSine","2":"outSine","3":"inOutSine","4":"outInSine","5":"inQuad","6":"outQuad","7":"inOutQuad","8":"outInQuad","9":"inCubic","10":"outCubic","11":"inOutCubic","12":"outInCubic","13":"inQuart","14":"outQuart","15":"inOutQuart","16":"outInQuart","17":"inQuint","18":"outQuint","19":"inOutQuint","20":"outInQuint","21":"inExpo","22":"outExpo","23":"inOutExpo","24":"outInExpo","25":"inCirc","26":"outCirc","27":"inOutCirc","28":"outInCirc","29":"inBack","30":"outBack","31":"inOutBack","32":"outInBack","33":"inElastic","34":"outElastic","35":"inOutElastic","36":"outInElastic","37":"inBounce","38":"outBounce","39":"inOutBounce","40":"outInBounce"},"link":{"0":"Linear.gif","1":"inSine.gif","2":"outSine.gif","3":"inOutSine.gif","4":"outInSine.gif","5":"inQuad.gif","6":"outQuad.gif","7":"inOutQuad.gif","8":"outInQuad.gif","9":"inCubic.gif","10":"outCubic.gif","11":"inOutCubic.gif","12":"outInCubic.gif","13":"inQuart.gif","14":"outQuart.gif","15":"inOutQuart.gif","16":"outInQuart.gif","17":"inQuint.gif","18":"outQuint.gif","19":"inOutQuint.gif","20":"outInQuint.gif","21":"inExpo.gif","22":"outExpo.gif","23":"inOutExpo.gif","24":"outInExpo.gif","25":"inCirc.gif","26":"outCirc.gif","27":"inOutCirc.gif","28":"outInCirc.gif","29":"inBack.gif","30":"outBack.gif","31":"inOutBack.gif","32":"outInBack.gif","33":"inElastic.gif","34":"outElastic.gif","35":"inOutElastic.gif","36":"outInElastic.gif","37":"inBounce.gif","38":"outBounce.gif","39":"inOutBounce.gif","40":"outInBounce.gif"},"def_source":{"0":"\ndef Linear(time, begin, change, duration):\n    return change * time \/ duration + begin\n","1":"\ndef inSine(time, begin, change, duration):\n  return -change * math.cos(time \/ duration * (math.pi \/ 2)) + change + begin\n","2":"\ndef outSine(time, begin, change, duration):\n  return change * math.sin(time \/ duration * (math.pi \/ 2)) + begin\n","3":"\ndef inOutSine(time, begin, change, duration):\n  return -change \/ 2 * (math.cos(math.pi * time \/ duration) - 1) + begin\n","4":"\ndef outInSine(time, begin, change, duration):\n  if time\/duration < 0.5:\n    return outSine(time * 2, begin, change \/ 2, duration)\n  else:\n    return inSine((time * 2) -duration, begin + change \/ 2, change \/ 2, duration)\n","5":"\ndef inQuad(time, begin, change, duration):\n  return change * (time\/duration)**2 + begin\n","6":"\ndef outQuad(time, begin, change, duration):\n  return -change * (time\/duration) * (time\/duration - 2.) + begin\n","7":"\ndef inOutQuad(time, begin, change, duration):\n  if time\/duration < 0.5:\n    return change \/ 2 * ((time\/duration) * 2)** 2 + begin\n  else:\n    return -change \/ 2 * (((time\/duration) * 2 - 1) * ((time\/duration) * 2 - 3) - 1) + begin\n","8":"\ndef outInQuad(time, begin, change, duration):\n  if time < duration \/ 2:\n    return outQuad (time * 2, begin, change \/ 2, duration)\n  else:\n    return inQuad((time * 2) - duration, begin + change \/ 2, change \/ 2, duration)\n","9":"\ndef inCubic(time, begin, change, duration):\n  return change * (time\/duration)**3 + begin\n","10":"\ndef outCubic(time, begin, change, duration):\n  return change * ((time\/duration-1)**3 + 1) + begin\n","11":"\ndef inOutCubic(time, begin, change, duration):\n  t2 = time\/duration*2\n  if time\/duration < 0.5 :\n    return change \/ 2 * t2**3 + begin\n  else:\n    return change \/ 2 * ((t2-2)**3 + 2) + begin\n","12":"\ndef outInCubic(time, begin, change, duration):\n  if time\/duration < 0.5:\n    return outCubic(time * 2, begin, change \/ 2, duration)\n  else:\n    return inCubic((time * 2) - duration, begin + change \/ 2, change \/ 2, duration)\n","13":"\ndef inQuart(time, begin, change, duration):\n  return change *(time\/duration)**4 + begin\n","14":"\ndef outQuart(time, begin, change, duration):\n  return -change * (( time \/ duration - 1)**4- 1) + begin\n","15":"\ndef inOutQuart(time, begin, change, duration):\n  if time\/duration < 0.5:\n    return change \/ 2 * (time \/ duration * 2)**4 + begin\n  else:\n    return -change \/ 2 * ((time \/ duration*2-2)**4 - 2) + begin\n","16":"\ndef outInQuart(time, begin, change, duration):\n  if time\/duration < 0.5:\n    return outQuart(time * 2, begin, change \/ 2, duration)\n  else:\n    return inQuart((time * 2) - duration, begin + change \/ 2, change \/ 2, duration)\n","17":"\ndef inQuint(time, begin, change, duration):\n    return change *(time\/duration)**5 + begin\n","18":"\ndef outQuint(time, begin, change, duration):\n  return change * ((time\/duration-1)**5 + 1) + begin\n","19":"\ndef inOutQuint(time, begin, change, duration):\n  t2 = time\/duration*2\n  if time\/duration < 0.5 :\n    return change \/ 2 * t2**5 + begin\n  else:\n    return change \/ 2 * ((t2-2)**5 + 2) + begin\n","20":"\ndef outInQuint(time, begin, change, duration):\n  if time\/duration < 0.5:\n    return outQuint(time * 2, begin, change \/ 2, duration)\n  else:\n    return inQuint((time * 2) - duration, begin + change \/ 2, change \/ 2, duration)\n","21":"\ndef inExpo(time, begin, change, duration):\n    if time == 0:\n        return begin\n    return change * pow(2, 10 * (time\/duration - 1)) + begin\n","22":"\ndef outExpo(time, begin, change, duration):\n    if time\/duration == 1:\n        return begin + change\n    return change * (-pow(2, -10 * time\/duration) + 1) + begin\n","23":"\ndef inOutExpo(time, begin, change, duration):\n    if time == 0:\n        return begin\n    if time\/duration == 1:\n        return begin + change\n    time = time\/duration * 2\n    if time < 1:\n        return change \/ 2 * pow(2, 10 * (time - 1)) + begin - duration * 0.0005\n    else:\n        time = time - 1\n        return change \/ 2 * 1.0005 * (-pow(2, -10 * time) + 2) + begin\n","24":"\ndef outInExpo(time, begin, change, duration):\n    if time\/duration < 0.5:\n        return outExpo(time * 2, begin, change \/ 2, duration)\n    else:\n        return inExpo((time * 2) - duration, begin + change \/ 2, change \/ 2, duration)\n","25":"\ndef inCirc(time, begin, change, duration):\n  return change * (1 - math.sqrt(1 - time \/ duration)) + begin\n","26":"\ndef outCirc(time, begin, change, duration):\n  return change * math.sqrt(time \/ duration) + begin\n","27":"\ndef inOutCirc(time, begin, change, duration):\n  if time\/duration < 0.5:\n    return -change \/ 2 * (math.sqrt(1 - (time \/ duration * 2) **2) - 1) + begin\n  else:\n    return change \/ 2 * (math.sqrt(1 - (time \/ duration * 2 - 2) **2) + 1) + begin\n","28":"\ndef outInCirc(time, begin, change, duration):\n  if time\/duration < 0.5:\n    return outCirc(time * 2, begin, change \/ 2, duration)\n  else:\n    return inCirc((time * 2) - duration, begin + change \/ 2, change \/ 2, duration)\n","29":"\ndef inBack(time, begin, change, duration):\n    s = 1.70158\n    time = time \/ duration\n    return change * time * time * ((s + 1) * time - s) + begin\n","30":"\ndef outBack(time, begin, change, duration):\n    if time == 0: return 0\n    s = 1.70158\n    time = time \/ duration - 1\n    return change * (time * time * ((s + 1) * time + s) + 1) + begin\n","31":"\ndef inOutBack(time, begin, change, duration):\n    s = 1.70158 * 1.525\n    time = time\/duration * 2\n    if time < 1:\n        return change \/ 2 * (time * time * ((s + 1 ) * time - s)) + begin\n    else:\n        time = time - 2\n        return change \/ 2 * (time * time * ((s + 1 ) * time + s) + 2) + begin\n","32":"\ndef outInBack(time, begin, change, duration):\n    if time\/duration < 0.5:\n        return outBack(time * 2, begin, change \/ 2, duration)\n    else:\n        return inBack((time * 2 ) - duration, begin + change \/ 2, change \/ 2, duration)\n","33":"\ndef inElastic(time, begin, change, duration):\n    return change * (time\/duration)**4  * math.sin(time\/duration * math.pi * 4.5 ) + begin\n","34":"\ndef outElastic(time, begin, change, duration):\n    return (1 -  (time\/duration - 1)**4 * math.cos( time\/duration * math.pi * 4.5 )) * change + begin\n","35":"\ndef inOutElastic(time, begin, change, duration):\n    if time\/duration < 0.45:\n        return change *8 * (time\/duration)**4 * math.sin( time\/duration * math.pi * 9 ) + begin\n    elif time\/duration < 0.55:\n        return change*(0.5 + 0.75 * math.sin( time\/duration * math.pi * 4 )) + begin\n    else:\n        return change * (1 - 8 * (time\/duration - 1)**4 * math.sin( time\/duration * math.pi * 9)) + begin\n","36":"\ndef outInElastic(time, begin, change, duration):\n    if time\/duration < 0.5 :\n        return outElastic(time * 2, begin, change \/ 2, duration)\n    else:\n        return inElastic((time * 2) - duration, begin + change \/ 2, change \/ 2, duration)\n","37":"\ndef inBounce(time, begin, change, duration):\n  return change - outBounce(duration - time, 0, change, duration) + begin\n","38":"\ndef outBounce(time, begin, change, duration):\n  if  time \/ duration < 1 \/ 2.75:\n    return change * (7.5625 * (time\/duration)**2) + begin\n  elif  time \/ duration < 2 \/ 2.75:\n    return change * (7.5625 * (time\/duration - (1.5 \/ 2.75))**2 + 0.75) + begin\n  elif time\/duration < 2.5 \/ 2.75:\n    return change * (7.5625 *(time\/duration - (2.25 \/ 2.75))**2+ 0.9375) + begin\n  else:\n    return change * (7.5625 * (time\/duration - (2.625 \/ 2.75))**2+ 0.984375) + begin\n","39":"\ndef inOutBounce(time, begin, change, duration):\n  if time\/duration < 0.5 :\n    return inBounce(time * 2, 0, change, duration) * 0.5 + begin\n  else:\n    return outBounce(time * 2 - duration, 0, change, duration) * 0.5 + change * .5 + begin\n","40":"\ndef outInBounce(time, begin, change, duration):\n  if time\/duration < 0.5 :\n    return outBounce(time * 2, begin, change \/ 2, duration)\n  else:\n    return inBounce((time * 2) - duration, begin + change \/ 2, change \/ 2, duration)\n"},"type":{"0":0,"1":1,"2":2,"3":3,"4":4,"5":1,"6":2,"7":3,"8":4,"9":1,"10":2,"11":3,"12":4,"13":1,"14":2,"15":3,"16":4,"17":1,"18":2,"19":3,"20":4,"21":1,"22":2,"23":3,"24":4,"25":1,"26":2,"27":3,"28":4,"29":1,"30":2,"31":3,"32":4,"33":1,"34":2,"35":3,"36":4,"37":1,"38":2,"39":3,"40":4},"func":{"0":"Linear","1":"Sine","2":"Sine","3":"Sine","4":"Sine","5":"Quad","6":"Quad","7":"Quad","8":"Quad","9":"Cubic","10":"Cubic","11":"Cubic","12":"Cubic","13":"Quart","14":"Quart","15":"Quart","16":"Quart","17":"Quint","18":"Quint","19":"Quint","20":"Quint","21":"Expo","22":"Expo","23":"Expo","24":"Expo","25":"Circ","26":"Circ","27":"Circ","28":"Circ","29":"Back","30":"Back","31":"Back","32":"Back","33":"Elastic","34":"Elastic","35":"Elastic","36":"Elastic","37":"Bounce","38":"Bounce","39":"Bounce","40":"Bounce"}}